// <auto-generated />
using System;
using CA3_X00180961.ShopRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ShopRepository.Migrations
{
    [DbContext(typeof(CA3_X00180961Context))]
    partial class CA3_X00180961ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Models.ItemModel", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("ItemModel");
                });

            modelBuilder.Entity("Models.ShopA", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int?>("ShopID")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ItemID")
                        .IsUnique()
                        .HasFilter("[ItemID] IS NOT NULL");

                    b.HasIndex("ShopID");

                    b.ToTable("ProductFromShopAModel");
                });

            modelBuilder.Entity("Models.ShopB", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ItemID")
                        .IsUnique();

                    b.HasIndex("ShopID");

                    b.ToTable("ProductFromShopBModel");
                });

            modelBuilder.Entity("Models.ShopModel", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopId"), 1L, 1);

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopId");

                    b.ToTable("ShopModel");
                });

            modelBuilder.Entity("Models.ShopA", b =>
                {
                    b.HasOne("Models.ItemModel", "Item")
                        .WithOne("productFromShopAModel")
                        .HasForeignKey("Models.ShopA", "ItemID");

                    b.HasOne("Models.ShopModel", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopID");

                    b.Navigation("Item");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Models.ShopB", b =>
                {
                    b.HasOne("Models.ItemModel", "Item")
                        .WithOne("productFromShopBModel")
                        .HasForeignKey("Models.ShopB", "ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.ShopModel", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Models.ItemModel", b =>
                {
                    b.Navigation("productFromShopAModel");

                    b.Navigation("productFromShopBModel");
                });
#pragma warning restore 612, 618
        }
    }
}
